% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/OverlappingGenes.r
\name{overlapnearestgeneSearch}
\alias{overlapnearestgeneSearch}
\title{Extracts gene information from bed files}
\usage{
overlapnearestgeneSearch(
  smap,
  bed,
  inputfmtBed = c("bed", "BNBED"),
  EnzymeType = c("SVMerge", "SE"),
  outpath,
  n = 3,
  returnMethod_bedcomp = c("Text", "dataFrame"),
  input_fmt_SV = c("Text", "dataFrame"),
  bperrorindel = 3000,
  bperrorinvtrans = 50000
)
}
\arguments{
\item{smap}{character or dataFrame depending on the input_fmt_SV argument. 
If input_fmt_SV= 'Text", it is path to SMAP file. If input_fmt_SV= 'dataFrame", 
it is a dataframe.}

\item{bed}{Text. Normal Bed files or Bionano Bed file.}

\item{inputfmtBed}{character Whether the bed input is UCSC bed or Bionano bed.
Note: extract in bed format to be read by bedsv:
awk '{
 if($3 == "gene" && $13 == "gene_status") 
   print $1,$4,$5,$16,$7
 else if ($3 == "gene" && $13 == "gene_name")
   print $1,$4,$5,$14,$7
   }' gencode.v33.annotation.gtf >HomoSapienGRCH19.bed}

\item{EnzymeType}{Character. Type of enzyme. Options SVMerge and SE.}

\item{outpath}{character Path for the output files.}

\item{n}{numeric Number of genes to report which are nearest to the
breakpoint. Default is        3.}

\item{returnMethod_bedcomp}{Character. Type of output Dataframe or in Text format.}

\item{input_fmt_SV}{Character. Type of output Dataframe or in Text format.}

\item{bperrorindel}{Numeric. base pair error indel.}

\item{bperrorinvtrans}{Numeric. base pair error invtranslocation.}
}
\value{
Data Frame and Text file. Contains the smap with additional Gene Information.
}
\description{
Extracts gene information from bed files
}
\examples{
smapName="GM24385_Ason_DLE1_VAP_trio5.smap"
smap = system.file("extdata", smapName, package="nanotatoR")
bedFile <- system.file("extdata", "HomoSapienGRCH19_lift37.bed", package="nanotatoR")
outpath <- system.file("extdata", package="nanotatoR")
datcomp<-overlapnearestgeneSearch(smap = smap, 
bed=bedFile, inputfmtBed = "bed", outpath, 
n = 3, returnMethod_bedcomp = c("dataFrame"), 
input_fmt_SV = "Text",
EnzymeType = "SE", 
bperrorindel = 3000, bperrorinvtrans = 50000)
datcomp[1,]
}
